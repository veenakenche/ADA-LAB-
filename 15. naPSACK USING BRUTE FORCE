#include <stdio.h>

int values[] = {300, 200, 400, 500};
int weights[] = {2, 1, 5, 3};
int max(int a, int b) {
    return (a > b) ? a : b;
}

int knapsack_brute_force(int capacity, int n) {
    printf("knapsack_brute_force(%d,%d)\n", capacity, n);
    if (n == 0 || capacity == 0)
        return 0;
    if (weights[n - 1] > capacity)
        return knapsack_brute_force(capacity, n - 1);
    else {
        int include_item = values[n - 1] + knapsack_brute_force(capacity - weights[n - 1], n - 1);
        int exclude_item = knapsack_brute_force(capacity, n - 1);
        return max(include_item, exclude_item);
    }
}

int main() {
    int n = sizeof(values) / sizeof(values[0]);
    int capacity = 10;
    printf("\nMaximum value in Knapsack = %d", knapsack_brute_force(capacity, n));
    return 0;
}
